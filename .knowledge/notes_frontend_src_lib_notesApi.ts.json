{"is_source_file": true, "format": "TypeScript", "description": "This file defines data types and functions for managing notes, including listing, creating, updating, and deleting notes. It currently uses localStorage as a placeholder for backend interactions and includes comments indicating plans to connect to an external notes_database service.", "external_files": [], "external_methods": [], "published": ["Note", "listNotes", "getNote", "createNote", "updateNote", "deleteNote"], "classes": [], "methods": [{"name": "export async function listNotes(): Promise<Note[]> { listNotes", "description": "Fetches the list of notes from localStorage, sorts them by 'updatedAt' in descending order.", "scope": "", "scopeKind": ""}, {"name": "export async function getNote(id: string): Promise<Note | null> { getNote", "description": "Retrieves a single note by ID from the list of notes.", "scope": "", "scopeKind": ""}, {"name": "export async function createNote(input: Omit<Note, \"id\" | \"updatedAt\">): Promise<Note> { createNote", "description": "Creates a new note with a unique ID and current timestamp, stores it in localStorage.", "scope": "", "scopeKind": ""}, {"name": "export async function updateNote(id: string, patch: Partial<Omit<Note, \"id\">>): Promise<Note> { updateNote", "description": "Updates an existing note's fields and 'updatedAt' timestamp in localStorage.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteNote(id: string): Promise<void> { deleteNote", "description": "Removes a note by ID from localStorage.", "scope": "", "scopeKind": ""}], "calls": ["listNotes()", "window.localStorage.getItem", "window.localStorage.setItem", "JSON.parse", "JSON.stringify", "new Date()", "new Date().toISOString()", "crypto.randomUUID()"], "search-terms": ["notesApi", "localStorage", "note management", "CRUD notes", "localStorage placeholder", "future backend integration"], "state": 2, "file_id": 13, "knowledge_revision": 28, "git_revision": "", "ctags": [{"_type": "tag", "name": "JSON", "path": "/home/kavia/workspace/code-generation/simple-notes-app-180717-180764/notes_frontend/src/lib/notesApi.ts", "pattern": "/^  const notes: Note[] = data ? JSON.parse(data) : [];$/", "language": "TypeScript", "kind": "constant", "scope": "listNotes", "scopeKind": "function"}, {"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/simple-notes-app-180717-180764/notes_frontend/src/lib/notesApi.ts", "pattern": "/^export type Note = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/simple-notes-app-180717-180764/notes_frontend/src/lib/notesApi.ts", "pattern": "/^export async function createNote(input: Omit<Note, \"id\" | \"updatedAt\">): Promise<Note> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/simple-notes-app-180717-180764/notes_frontend/src/lib/notesApi.ts", "pattern": "/^  const data = typeof window !== \"undefined\" ? window.localStorage.getItem(\"notes\") : null;$/", "language": "TypeScript", "kind": "constant", "scope": "listNotes", "scopeKind": "function"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/simple-notes-app-180717-180764/notes_frontend/src/lib/notesApi.ts", "pattern": "/^export async function deleteNote(id: string): Promise<void> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getNote", "path": "/home/kavia/workspace/code-generation/simple-notes-app-180717-180764/notes_frontend/src/lib/notesApi.ts", "pattern": "/^export async function getNote(id: string): Promise<Note | null> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/simple-notes-app-180717-180764/notes_frontend/src/lib/notesApi.ts", "pattern": "/^    ...notes[idx],$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/simple-notes-app-180717-180764/notes_frontend/src/lib/notesApi.ts", "pattern": "/^  const idx = notes.findIndex((n) => n.id === id);$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "listNotes", "path": "/home/kavia/workspace/code-generation/simple-notes-app-180717-180764/notes_frontend/src/lib/notesApi.ts", "pattern": "/^export async function listNotes(): Promise<Note[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "newNote", "path": "/home/kavia/workspace/code-generation/simple-notes-app-180717-180764/notes_frontend/src/lib/notesApi.ts", "pattern": "/^  const newNote: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "next", "path": "/home/kavia/workspace/code-generation/simple-notes-app-180717-180764/notes_frontend/src/lib/notesApi.ts", "pattern": "/^  const next = [...notes];$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "next", "path": "/home/kavia/workspace/code-generation/simple-notes-app-180717-180764/notes_frontend/src/lib/notesApi.ts", "pattern": "/^  const next = [newNote, ...notes];$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "next", "path": "/home/kavia/workspace/code-generation/simple-notes-app-180717-180764/notes_frontend/src/lib/notesApi.ts", "pattern": "/^  const next = notes.filter((n) => n.id !== id);$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/simple-notes-app-180717-180764/notes_frontend/src/lib/notesApi.ts", "pattern": "/^  const notes = await listNotes();$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/simple-notes-app-180717-180764/notes_frontend/src/lib/notesApi.ts", "pattern": "/^  const notes = await listNotes();$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/simple-notes-app-180717-180764/notes_frontend/src/lib/notesApi.ts", "pattern": "/^  const notes = await listNotes();$/", "language": "TypeScript", "kind": "constant", "scope": "getNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/simple-notes-app-180717-180764/notes_frontend/src/lib/notesApi.ts", "pattern": "/^  const notes = await listNotes();$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/simple-notes-app-180717-180764/notes_frontend/src/lib/notesApi.ts", "pattern": "/^  const notes: Note[] = data ? JSON.parse(data) : [];$/", "language": "TypeScript", "kind": "constant", "scope": "listNotes", "scopeKind": "function"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/simple-notes-app-180717-180764/notes_frontend/src/lib/notesApi.ts", "pattern": "/^export async function updateNote(id: string, patch: Partial<Omit<Note, \"id\">>): Promise<Note> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/simple-notes-app-180717-180764/notes_frontend/src/lib/notesApi.ts", "pattern": "/^  const updated: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "updatedAt", "path": "/home/kavia/workspace/code-generation/simple-notes-app-180717-180764/notes_frontend/src/lib/notesApi.ts", "pattern": "/^    updatedAt: new Date().toISOString(),$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}], "hash": "da24dbff772b947fa2aaf867fb2e7299", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/lib/notesApi.ts", "revision_history": [{"28": ""}]}